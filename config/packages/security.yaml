security:    
    enable_authenticator_manager: true
    encoders:
        App\Entity\Tuser : bcrypt
    role_hierarchy:
        ROLE_AUTHOR: ROLE_ADMIN
        ROLE_ROOT: [ROLE_ADMIN]
    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'
    providers:
        users_in_memory: { memory: null }
        users_provider:
            entity: {class: App\Entity\Tuser, property: username}}
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        api_blog:
            pattern: ^/api/v1/secure
            stateless: true
            anonymous: false
            provider: users_provider
            guard:
                authenticators:
                 - lexik_jwt_authentication.jwt_token_authenticator
        main:
            lazy: true
            provider: users_in_memory

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
         - { path: ^/api/v1, roles: IS_AUTHENTICATED_ANONYMOUSLY }
         - { path: ^/api/v1/secure, roles: ROLE_AUTHOR }
        # - { path: ^/profile, roles: ROLE_USER }
